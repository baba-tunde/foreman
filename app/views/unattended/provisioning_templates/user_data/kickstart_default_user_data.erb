<%#
kind: user_data
name: Kickstart default user data
model: ProvisioningTemplate
oses:
- AlmaLinux
- CentOS
- CentOS_Stream
- Fedora
- Rocky
description: |
  This template is used during image based provisioning, when the image is configured to use user-data.
  The output is a shell script that cloud-init runs to configures the VM
  booted from the image. The image must have cloud-init installed in order for this to work.
  This script can be used with kickstart based distributions images.
-%>
<%
  rhel_compatible = @host.operatingsystem.family == 'Redhat' && @host.operatingsystem.name != 'Fedora'
  # safemode renderer does not support unary negation
  puppet_enabled = !host_param_true?('skip-puppet-setup') && (host_puppet_server.present? || host_param_true?('force-puppet'))
  salt_enabled = host_param('salt_master') ? true : false
  chef_enabled = @host.respond_to?(:chef_proxy) && @host.chef_proxy
-%>
#!/bin/bash

<%# Cloud instances frequently have incorrect hosts data %>
<%= snippet '3.1-stable-lcsb-fix_hosts' %>

<% if @host.provision_method == 'image' && root_pass.present? -%>
# Install the root password
echo 'root:<%= root_pass -%>' | /usr/sbin/chpasswd -e
<% end -%>

<%= snippet '3.1-stable-lcsb-yum_proxy' %>

<%= snippet '3.1-stable-lcsb-ntp' %>

<% if rhel_compatible && host_param_true?('enable-epel') -%>
<%= snippet '3.1-stable-lcsb-epel' -%>
<% end -%>

<%= snippet '3.1-stable-lcsb-redhat_register' %>

<% if host_enc['parameters']['realm'] && @host.realm && (@host.realm.realm_type == 'FreeIPA' || @host.realm.realm_type == 'Red Hat Identity Management') -%>
<%= snippet '3.1-stable-lcsb-freeipa_register' %>
<% end -%>

<% unless host_param_false?('package_upgrade') -%>
# update all the base packages from the updates repository
if [ -f /usr/bin/dnf ]; then
  dnf -y update
else
  yum -t -y update
fi
<% end -%>

<%= snippet('remote_execution_ssh_keys') %>

<%= snippet "blacklist_kernel_modules" %>

# Install lsb_release
if [ -f /usr/bin/dnf ]; then
  dnf -y install redhat-lsb
else
  yum -y install redhat-lsb
fi

# set selinux to permissive immediately (for openstack VMs)
setenforce 0
# disable on next reboot
sed -i -e 's/\(^SELINUX=\).*$/\1disabled/' /etc/selinux/config


<% if chef_enabled %>
<%= snippet '3.1-stable-lcsb-chef_client' %>
<% end -%>

<% if puppet_enabled %>
<% if host_param_true?('enable-puppetlabs-repo') || host_param_true?('enable-official-puppet7-repo') || host_param_true?('enable-puppetlabs-puppet6-repo') || host_param_true?('enable-puppetlabs-puppet5-repo') -%>
<%= snippet '3.1-stable-lcsb-puppetlabs_repo' %>
<% end -%>
<%= snippet '3.1-stable-lcsb-puppet_setup' %>
<% end -%>

<% if salt_enabled %>
<%= snippet '3.1-stable-lcsb-saltstack_setup' %>
<% end -%>

<% if host_param_true?('ansible_tower_provisioning') -%>
    <%= save_to_file('/tmp/ansible_provisioning_call.sh', snippet('ansible_tower_callback_script')) %>
    /bin/sh /tmp/ansible_provisioning_call.sh
<% end -%>

# UserData still needs to mark the build as finished
<%= snippet '3.1-stable-lcsb-built' %>
